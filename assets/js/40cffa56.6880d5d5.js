"use strict";(self.webpackChunksite_v_3=self.webpackChunksite_v_3||[]).push([[6371],{1969:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>r,contentTitle:()=>a,default:()=>h,frontMatter:()=>o,metadata:()=>l,toc:()=>d});var i=s(5893),t=s(1151);const o={author:"Andrey Popp",authorURL:"https://twitter.com/andreypopp",title:"What's new in esy 0.4.x"},a=void 0,l={permalink:"/blog/2018/12/27/0.4.x",source:"@site/blog/2018-12-27-0.4.x.md",title:"What's new in esy 0.4.x",description:"This is the first public blog post on the esy dev blog.  We've been writing",date:"2018-12-27T00:00:00.000Z",formattedDate:"December 27, 2018",tags:[],readingTime:6.395,hasTruncateMarker:!0,authors:[{name:"Andrey Popp",url:"https://twitter.com/andreypopp"}],frontMatter:{author:"Andrey Popp",authorURL:"https://twitter.com/andreypopp",title:"What's new in esy 0.4.x"},unlisted:!1,prevItem:{title:"New release - 0.6.0 \ud83c\udf89",permalink:"/blog/2020/01/12/0.6.0"}},r={authorsImageUrls:[void 0]},d=[{value:"What Is Esy",id:"what-is-esy",level:2},{value:"esy 0.4.x",id:"esy-04x",level:2},{value:"Plug&#39;n&#39;play Installations",id:"plugnplay-installations",level:3},{value:"Alpha preview of Windows support",id:"alpha-preview-of-windows-support",level:3},{value:"Other 0.4.x goodies",id:"other-04x-goodies",level:3}];function c(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"This is the first public blog post on the esy dev blog.  We've been writing\nlots and lots of code to make esy work well, and until now we haven't\ncommunicated much about esy."}),"\n",(0,i.jsx)(n.h2,{id:"what-is-esy",children:"What Is Esy"}),"\n",(0,i.jsx)(n.p,{children:"If you've stumbled upon this and don't know what esy is: esy is a\n\"package.json\"-like workflow with first class support for native development."}),"\n",(0,i.jsxs)(n.p,{children:["Esy started as part of the ",(0,i.jsx)(n.a,{href:"https://reasonml.github.io",children:"reason"})," effort with the goal of\nimplementing isolated and fast native Reason/OCaml project builds that were\nfamiliar to JavaScript developers. Esy itself is compiled natively,\nand can manage packages for most compiled languages (we use it to\npackage/distribute C/C++ packages in addition to Reason and OCaml)."]}),"\n",(0,i.jsxs)(n.p,{children:["Esy should be familiar to anyone with experience with Yarn, or npm (just run\n",(0,i.jsx)(n.code,{children:"esy"})," inside a directory with a ",(0,i.jsx)(n.code,{children:"package.json"}),")."]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["esy provides a unified package management workflow that can install/build\npackages from ",(0,i.jsx)(n.a,{href:"https://opam.ocaml.org/",children:"opam"})," as well as native packages published to ",(0,i.jsx)(n.a,{href:"https://npmjs.com/",children:"npm"})]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"esy is not tied to any particular choice of a language/platform. Though we are\nfocusing on native Reason/OCaml first."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"esy is build-system agnostic: you don't have to port a project\nto some specific build system to make it work with esy."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:'esy tries to provide "hermetic" builds so that builds of packages are\nunaffected by the system software installed at global paths: if it works on my\nmachine then it should work on yours.'}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"esy caches built packages across projects: with a warm cache, new projects\nare cheap to initialise and build."}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["This is not an exhaustive list of esy features but we think these are the most\nimportant points.\nRead more about esy's motivations in the ",(0,i.jsx)(n.a,{href:"https://esy.sh/docs/en/what-why.html",children:"esy docs"})]}),"\n",(0,i.jsx)(n.h2,{id:"esy-04x",children:"esy 0.4.x"}),"\n",(0,i.jsxs)(n.p,{children:["We recently promoted the 0.4.9 release of esy as ",(0,i.jsx)(n.code,{children:"latest"}),". That means if you\nexecute:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"% npm install -g esy\n"})}),"\n",(0,i.jsxs)(n.p,{children:["You'll get ",(0,i.jsx)(n.code,{children:"esy@0.4.9"})," which is packed with new features. Below we discuss some\nof those."]}),"\n",(0,i.jsx)(n.h3,{id:"plugnplay-installations",children:"Plug'n'play Installations"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"TL;DR:"})," esy won't populate ",(0,i.jsx)(n.code,{children:"node_modules"})," directory with package sources\nanymore, and esy now supports installing Plug'n'play(pnp) JavaScript\ndependencies."]}),"\n",(0,i.jsxs)(n.p,{children:["In its first iteration, ",(0,i.jsx)(n.code,{children:"esy"})," initially installed all dependency sources into\n",(0,i.jsx)(n.code,{children:"node_modules."})," The benefit of this is that approach is that it was compatible\nwith popular JS tooling that relied on ",(0,i.jsx)(n.code,{children:"node_modules"})," directory. The downside\nwas that for native packages (the main focus of esy) copying sources over from\ncache to a ",(0,i.jsx)(n.code,{children:"node_modules"})," directory was unnecessary and a waste of time and\ndisk space."]}),"\n",(0,i.jsxs)(n.p,{children:["Furthermore, esy already builds projects purely out-of-source to ensure\nreproducibility - installing into ",(0,i.jsx)(n.code,{children:"node_modules"})," was merely done to adhere to\nJavaScript's conventions, and it actually risked compromising reproducibility."]}),"\n",(0,i.jsx)(n.p,{children:"So how could esy achieve the best of both worlds (JS runtime compatibility) and\n(maintaining reproducible package builds)?"}),"\n",(0,i.jsxs)(n.p,{children:["Fortunately, Yarn team figured out how to ditch ",(0,i.jsx)(n.code,{children:"node_modules"})," for JS packages.\nThey designed a new convention called ",(0,i.jsx)(n.a,{href:"https://github.com/arcanis/rfcs/blob/6fc13d52f43eff45b7b46b707f3115cc63d0ea5f/accepted/0000-plug-an-play.md",children:"Plug'n'play installations"}),' ("pnp").\nPnp is a way to run JS packages directly from the global package cache without\ncopying them to ',(0,i.jsx)(n.code,{children:"node_modules"}),", while having Node, Webpack and other runtimes\nto be able to resolve code from there."]}),"\n",(0,i.jsxs)(n.p,{children:["As of 0.4.x, esy now places a copy of Yarn's ",(0,i.jsx)(n.code,{children:"pnp.js"})," runtime at installation\ntime into your project when installing JavaScript dependencies. That ",(0,i.jsx)(n.code,{children:"pnp.js"}),"\nallows ",(0,i.jsx)(n.code,{children:"node"}),"'s module resolution to work even if dependencies are not in\n",(0,i.jsx)(n.code,{children:"node_modules"}),". That makes ",(0,i.jsx)(n.code,{children:"esy"})," JavaScript dependencies more like native\ndependencies \u2014 they don't have to be copied into ",(0,i.jsx)(n.code,{children:"node_modules"}),".  Now,\neven if your project has JavaScript dependencies, installations with a warm\ncache are fast. Like, really fast (timings are for\n",(0,i.jsx)(n.a,{href:"https://github.com/esy-ocaml/hello-reason",children:"esy-ocaml/hello-reason"})," project):"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"% time esy install\ninfo install 0.4.7\ninfo fetching: done\ninfo installing: done\nesy install  0.08s user 0.06s system 93% cpu 0.142 total\n"})}),"\n",(0,i.jsx)(n.p,{children:"This also means that esy is now compatible with the most important parts of the\nJS ecosystem: webpack, jest, flow, react-scripts, rollup, prettier and others\nwhich have all been made pnp compatible thanks to the efforts of Yarn. A few\nnpm packages have still not made themselves pnp compatible \u2014 you should\nfile issues on those projects requesting that they support pnp, so that they\ncan be used with Yarn pnp, esy, and any other package manager that adopts\nthe pnp standard."}),"\n",(0,i.jsx)(n.p,{children:"The workflow for working with JS (non-native) packages with esy looks like this:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"After installing dependencies as usual, execute pnp-enabled NodeJs\ninterpreter:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"% esy node\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Execute npm binaries installed with packages like webpack, flow, jest and\nsimilar:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"% esy webpack\n% esy flow\n% esy jest\n"})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"alpha-preview-of-windows-support",children:"Alpha preview of Windows support"}),"\n",(0,i.jsxs)(n.p,{children:["Another huge feature which shipped in 0.4.x is preliminary native Windows\nsupport! Install and use ",(0,i.jsx)(n.code,{children:"esy"})," directly from native Windows command prompt\nwithout needing to install anything else on your system.\nYes \u2014 it produces pure native Windows binaries that run on any Windows\nmachine."]}),"\n",(0,i.jsxs)(n.p,{children:["Thanks to heroic effots of ",(0,i.jsx)(n.a,{href:"https://github.com/bryphe",children:"Bryan Phelps"})," and foundational work by the\nOCaml community developing Reason/OCaml, native project management on Windows\nare now as easy as on macOS/Linux:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"C:\\Users\\Andrey> git clone https://github.com/facebook/reason\nC:\\Users\\Andrey> cd reason\nC:\\Users\\Andrey> esy\ninfo install 0.4.9\ninfo fetching: done\ninfo installing: done\n"})}),"\n",(0,i.jsx)(n.p,{children:"There is more to say about how Windows support is implemented in esy and we\nwill make sure there's a dedicated post on this in the near future where we\nwill describe some of the foundational compiler and tooling work for Windows\nthat the OCaml community has invested in."}),"\n",(0,i.jsxs)(n.p,{children:["Note though that Windows support is still considered alpha \u2014 there are\nrough edges which needs to be fixed. If you are a developer who works on Windows\nand want to help \u2014 jump into ",(0,i.jsx)(n.a,{href:"https://github.com/esy/esy/issues?q=is%3Aissue+is%3Aopen+label%3Awindows",children:'esy/esy issues labelled\n"Windows"'})," and help us! The good thing is that we have CI running on\nWindows too (a big thank you to ",(0,i.jsx)(n.a,{href:"https://github.com/ulrikstrid",children:"Ulrik Strid"})," for making sure a large\npart of our test suite can run on Windows)."]}),"\n",(0,i.jsx)(n.h3,{id:"other-04x-goodies",children:"Other 0.4.x goodies"}),"\n",(0,i.jsxs)(n.p,{children:["There are lots and lots of changes in the 0.4.x release line, which could have\narguably been versioned ",(0,i.jsx)(n.code,{children:"0.5.x"}),". In the future, we are aiming for more\nincremental releases."]}),"\n",(0,i.jsxs)(n.p,{children:["There are too many new features to list, but to highlight a couple of entries\nin the ",(0,i.jsx)(n.a,{href:"https://github.com/esy/esy/blob/496923fce0412f1e3e81ebfa8797a4e09f28ecd4/CHANGELOG.md#048--latest",children:"CHANGELOG"}),":"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Improved workflow for linked packages: working on multiple packages in\ndevelopment is now more efficient and esy allows more flexibility in how you\norganize your project."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Support for multiple isolated environments constructed on the fly from\npackage configs. Now you may have multiple ",(0,i.jsx)(n.code,{children:".json"})," configurations in your\nproject root (similar to a monorepo) and install/build them in total\nisolation. If you have a ",(0,i.jsx)(n.code,{children:"package.dev.json"})," file you can use it explicitly:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"% esy @package.dev.json build\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Flexible package override mechanism which allows turning any source code\ndistribution into an esy package, bringing it into your project with all the\nbenefits of the esy workflow: cached builds, isolated environments, etc.\nThis lets you turn any git hash or URL into an esy package without forking\nit, even if that package doesn't have a ",(0,i.jsx)(n.code,{children:"package.json"})," file."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",children:'{\n  "resolutions": {\n    "pkg-config": {\n      "source": "https://...",\n      "override": {\n        "build": [\n          "./configure --prefix #{self.install}",\n          "make"\n        ],\n        "install": [\n          "make install"\n        ]\n      }\n    }\n  }\n'})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Numerous improvements to esy's user interface: new commands (",(0,i.jsx)(n.code,{children:"esy show"})," and\n",(0,i.jsx)(n.code,{children:"esy status"}),"), faster ",(0,i.jsx)(n.code,{children:"esy x ..."}),' command invocations, a new set of low level\nplumbing commands for "scriptable" esy workflows, ...']}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["New ",(0,i.jsx)(n.code,{children:"esy.lock"})," format which is easier to review on updates."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Bug fixes, bug fixes, bug fixes, ..."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Some of these features are not documented yet properly but we'll make sure we do\nthis and then post updates on this blog."}),"\n",(0,i.jsx)(n.p,{children:"Stay tuned!"})]})}function h(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},1151:(e,n,s)=>{s.d(n,{Z:()=>l,a:()=>a});var i=s(7294);const t={},o=i.createContext(t);function a(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);