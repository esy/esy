"use strict";(self.webpackChunksite_v_3=self.webpackChunksite_v_3||[]).push([[685],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=s(n),m=o,f=d["".concat(p,".").concat(m)]||d[m]||u[m]||a;return n?r.createElement(f,l(l({ref:t},c),{},{components:n})):r.createElement(f,l({ref:t},c))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,l=new Array(a);l[0]=m;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i[d]="string"==typeof e?e:o,l[1]=i;for(var s=2;s<a;s++)l[s]=n[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3812:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>u,frontMatter:()=>a,metadata:()=>i,toc:()=>s});var r=n(7462),o=(n(7294),n(3905));const a={id:"opam-workflow",title:"Workflow for opam Packages"},l=void 0,i={unversionedId:"opam-workflow",id:"opam-workflow",title:"Workflow for opam Packages",description:"This feature is experimental",source:"@site/../docs/opam-workflow.md",sourceDirName:".",slug:"/opam-workflow",permalink:"/docs/opam-workflow",draft:!1,editUrl:"https://github.com/esy/esy/tree/master/docs/../docs/opam-workflow.md",tags:[],version:"current",lastUpdatedBy:"Manas Jayanth",lastUpdatedAt:1701661520,formattedLastUpdatedAt:"Dec 4, 2023",frontMatter:{id:"opam-workflow",title:"Workflow for opam Packages"},sidebar:"docs",previous:{title:"Building npm Releases",permalink:"/docs/npm-release"},next:{title:"Workflow for C/C++ Packages",permalink:"/docs/c-workflow"}},p={},s=[{value:"Installing dependencies",id:"installing-dependencies",level:2},{value:"Building project",id:"building-project",level:2}],c={toc:s},d="wrapper";function u(e){let{components:t,...n}=e;return(0,o.kt)(d,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("strong",{parentName:"p"},"This feature is experimental")),(0,o.kt)("p",{parentName:"blockquote"},"This feature didn't receive a lot of testing, please report any issues found\nand feature requests.")),(0,o.kt)("p",null,"esy supports developing opam projects directly, the workflow is similar to esy\nprojects:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"% git clone https://github.com/rgrinberg/ocaml-semver.git\n% cd ocaml-semver\n% esy install\n% esy build\n")),(0,o.kt)("h2",{id:"installing-dependencies"},"Installing dependencies"),(0,o.kt)("p",null,"To install project dependencies run ",(0,o.kt)("inlineCode",{parentName:"p"},"esy install")," command."),(0,o.kt)("p",null,"This will read dependencies from all ",(0,o.kt)("inlineCode",{parentName:"p"},"*.opam")," files found in a project and\ninstall them locally into the sandbox."),(0,o.kt)("p",null,"Note that even compiler is installed locally to the project, you don't need to\nmanage switches manually like in opam:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"% esy ocamlc\n")),(0,o.kt)("p",null,"Will run the compiler version defined by the project's constraints set in\n",(0,o.kt)("inlineCode",{parentName:"p"},"*.opam")," files."),(0,o.kt)("h2",{id:"building-project"},"Building project"),(0,o.kt)("p",null,"To build project dependencies and the project itself run ",(0,o.kt)("inlineCode",{parentName:"p"},"esy build")," command."),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"esy build")," command  performs differently depending on the number of opam\nfiles found in a project directory:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"In case there's a single ",(0,o.kt)("inlineCode",{parentName:"p"},"*.opam")," file found ",(0,o.kt)("inlineCode",{parentName:"p"},"esy build")," will build all\ndependencies and then execute ",(0,o.kt)("inlineCode",{parentName:"p"},"build")," commands found in opam metadata.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"In case there are multiple ",(0,o.kt)("inlineCode",{parentName:"p"},"*.opam")," files found ",(0,o.kt)("inlineCode",{parentName:"p"},"esy build")," will build all\ndependencies and stop. To build the project itself users are supposed to use the\ncommand which is specified by the project's workflow but run inside the esy's\nbuild environment."),(0,o.kt)("p",{parentName:"li"},"In case of a dune-based project this is usually means:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"% esy b dune build\n")))))}u.isMDXComponent=!0}}]);