"use strict";(self.webpackChunksite_v_3=self.webpackChunksite_v_3||[]).push([[9212],{3905:(e,n,t)=>{t.d(n,{Zo:()=>s,kt:()=>f});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var p=r.createContext({}),c=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},s=function(e){var n=c(e.components);return r.createElement(p.Provider,{value:n},e.children)},d="mdxType",k={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,o=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),d=c(t),u=i,f=d["".concat(p,".").concat(u)]||d[u]||k[u]||o;return t?r.createElement(f,a(a({ref:n},s),{},{components:t})):r.createElement(f,a({ref:n},s))}));function f(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var o=t.length,a=new Array(o);a[0]=u;var l={};for(var p in n)hasOwnProperty.call(n,p)&&(l[p]=n[p]);l.originalType=e,l[d]="string"==typeof e?e:i,a[1]=l;for(var c=2;c<o;c++)a[c]=t[c];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},7094:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>a,default:()=>k,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var r=t(7462),i=(t(7294),t(3905));const o={id:"c-workflow",title:"Workflow for C/C++ Packages"},a=void 0,l={unversionedId:"c-workflow",id:"c-workflow",title:"Workflow for C/C++ Packages",description:"esy providing a workflow for native development couldn't skip supporting C/C++",source:"@site/../docs/c-workflow.md",sourceDirName:".",slug:"/c-workflow",permalink:"/docs/c-workflow",draft:!1,editUrl:"https://github.com/esy/esy/tree/master/docs/../docs/c-workflow.md",tags:[],version:"current",lastUpdatedBy:"ducdetronquito",lastUpdatedAt:1696763773,formattedLastUpdatedAt:"Oct 8, 2023",frontMatter:{id:"c-workflow",title:"Workflow for C/C++ Packages"},sidebar:"docs",previous:{title:"Workflow for opam Packages",permalink:"/docs/opam-workflow"},next:{title:"Offline Builds",permalink:"/docs/offline"}},p={},c=[{value:"Exposing C library with pkg-config",id:"exposing-c-library-with-pkg-config",level:2},{value:"Consuming C library with pkg-config",id:"consuming-c-library-with-pkg-config",level:2}],s={toc:c},d="wrapper";function k(e){let{components:n,...t}=e;return(0,i.kt)(d,(0,r.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"esy providing a workflow for native development couldn't skip supporting C/C++\npackages as C/C++ libraries/tools are so widespread."),(0,i.kt)("p",null,"There are numerous examples of Reason/OCaml code using C/C++ code via FFI:\nbindings to libcurl, SDL, OpenGL and so on and so on."),(0,i.kt)("p",null,"The easiest way to expose some C/C++ code between esy packages is with\n",(0,i.kt)("a",{parentName:"p",href:"https://www.freedesktop.org/wiki/Software/pkg-config/"},"pkg-config"),"."),(0,i.kt)("h2",{id:"exposing-c-library-with-pkg-config"},"Exposing C library with pkg-config"),(0,i.kt)("p",null,"Let's consider a C library called ",(0,i.kt)("inlineCode",{parentName:"p"},"dep")," which is going to be consumed as an\n",(0,i.kt)("inlineCode",{parentName:"p"},"dep")," esy package."),(0,i.kt)("p",null,"First we need to write ",(0,i.kt)("inlineCode",{parentName:"p"},"dep.pc")," file which contains pkg-config configuration\nfile for our lib."),(0,i.kt)("p",null,"We do this via ",(0,i.kt)("inlineCode",{parentName:"p"},"Makefile")," with ",(0,i.kt)("inlineCode",{parentName:"p"},"build")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"install")," targets:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'define dep_pc\nprefix=$(cur__install)\nexec_prefix=$${prefix}\nincludedir=$${prefix}/lib\nlibdir=$${exec_prefix}/lib\n\nName: dep\nDescription: The dep library\nVersion: 1.0.0\nCflags: -I$${includedir}\nLibs: -L$${libdir} -ldep\nendef\nexport dep_pc\n\nbuild:\n  ... build commands ...\n\ninstall:\n  ... other install commands ...\n  echo "$$dep_pc" > $(cur__install)/lib/dep.pc\n')),(0,i.kt)("p",null,"Note that we have installed out ",(0,i.kt)("inlineCode",{parentName:"p"},"dep.pc")," into ",(0,i.kt)("inlineCode",{parentName:"p"},"$cur__install/lib"),", we need to\nupdate ",(0,i.kt)("inlineCode",{parentName:"p"},"$PKG_CONFIG_PATH")," with this in ",(0,i.kt)("inlineCode",{parentName:"p"},'"esy.exportedEnv"'),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'{\n  "name": "dep",\n  "version": "1.0.0",\n  "esy": {\n    "build": "make build",\n    "install": "make install",\n    "exportedEnv": {\n      "PKG_CONFIG_PATH": {\n        "val": "#{self.lib : $PKG_CONFIG_PATH}",\n        "scope": "global"\n      }\n    }\n  }\n}\n')),(0,i.kt)("p",null,"In the ",(0,i.kt)("inlineCode",{parentName:"p"},"package.json")," above ",(0,i.kt)("inlineCode",{parentName:"p"},"#{self.lib}")," is the same value as\n",(0,i.kt)("inlineCode",{parentName:"p"},"$cur__install/lib")," but represented via esy's command expression syntax."),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},(0,i.kt)("strong",{parentName:"p"},"NOTE")),(0,i.kt)("p",{parentName:"blockquote"},"If you are porting some C/C++ library into esy then it is most likely this\nlibrary already has ",(0,i.kt)("inlineCode",{parentName:"p"},"*.pc")," file present. Then you need only to make sure you\nupdate ",(0,i.kt)("inlineCode",{parentName:"p"},"$PKG_CONFIG_PATH")," in the ",(0,i.kt)("inlineCode",{parentName:"p"},"package.json")," corresponding to the library.")),(0,i.kt)("h2",{id:"consuming-c-library-with-pkg-config"},"Consuming C library with pkg-config"),(0,i.kt)("p",null,"To link a C library exposed with ",(0,i.kt)("inlineCode",{parentName:"p"},"pkg-config")," a project must depend on that\nlibrary and on ",(0,i.kt)("inlineCode",{parentName:"p"},"pkg-config")," package which is hosted on GitHub at\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/esy-packages/pkg-config"},"esy-packages/pkg-config"),"."),(0,i.kt)("p",null,"The entire ",(0,i.kt)("inlineCode",{parentName:"p"},"package.json")," for the project would look like this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'{\n  "name": "my-project",\n  "esy": {\n    "build": "make build",\n    "install": "make install"\n  },\n  "dependencies": {\n    "dep": "1.0.0",\n    "pkg-config": "esy-packages/pkg-config"\n  }\n}\n')),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"Makefile")," will contain a call to ",(0,i.kt)("inlineCode",{parentName:"p"},"pkg-config")," to generate command line\noptions for C compiler needed to compile against a library ",(0,i.kt)("inlineCode",{parentName:"p"},"dep")," and link it to\nthe final executable:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"build:\n  cc $(shell pkg-config --cflags --libs dep) \\\n     -o $(cur__target_dir)/main main.c\n")),(0,i.kt)("p",null,"This is the entire workflow needed to work with C/C++ code with esy."))}k.isMDXComponent=!0}}]);