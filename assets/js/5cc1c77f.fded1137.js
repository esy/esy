"use strict";(self.webpackChunksite_v_3=self.webpackChunksite_v_3||[]).push([[4423],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>k});var n=a(7294);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function r(e,t){if(null==e)return{};var a,n,l=function(e,t){if(null==e)return{};var a,n,l={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},c=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},h=n.forwardRef((function(e,t){var a=e.components,l=e.mdxType,i=e.originalType,s=e.parentName,c=r(e,["components","mdxType","originalType","parentName"]),d=p(a),h=l,k=d["".concat(s,".").concat(h)]||d[h]||u[h]||i;return a?n.createElement(k,o(o({ref:t},c),{},{components:a})):n.createElement(k,o({ref:t},c))}));function k(e,t){var a=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var i=a.length,o=new Array(i);o[0]=h;var r={};for(var s in t)hasOwnProperty.call(t,s)&&(r[s]=t[s]);r.originalType=e,r[d]="string"==typeof e?e:l,o[1]=r;for(var p=2;p<i;p++)o[p]=a[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}h.displayName="MDXCreateElement"},6439:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>r,toc:()=>p});var n=a(7462),l=(a(7294),a(3905));const i={id:"how-it-works",title:"How esy works"},o=void 0,r={unversionedId:"how-it-works",id:"how-it-works",title:"How esy works",description:"This document describes esy internals.",source:"@site/../docs/how-it-works.md",sourceDirName:".",slug:"/how-it-works",permalink:"/docs/how-it-works",draft:!1,editUrl:"https://github.com/esy/esy/tree/master/docs/../docs/how-it-works.md",tags:[],version:"current",lastUpdatedBy:"Manas Jayanth",lastUpdatedAt:1701663447,formattedLastUpdatedAt:"Dec 4, 2023",frontMatter:{id:"how-it-works",title:"How esy works"},sidebar:"docs",previous:{title:"Offline Builds",permalink:"/docs/offline"},next:{title:"Development",permalink:"/docs/development"}},s={},p=[{value:"Overview",id:"overview",level:2},{value:"Pipeline",id:"pipeline",level:2},{value:"Solve Dependencies",id:"solve-dependencies",level:3},{value:"Fetch Dependencies",id:"fetch-dependencies",level:3},{value:"Crawl Package Graph",id:"crawl-package-graph",level:3},{value:"Produce Task Graph",id:"produce-task-graph",level:3},{value:"Build Task Graph",id:"build-task-graph",level:3},{value:"Caches",id:"caches",level:2},{value:"Global Installation Cache",id:"global-installation-cache",level:3},{value:"Location &amp; Structure",id:"location--structure",level:4},{value:"Cache Key",id:"cache-key",level:4},{value:"Global Build Store",id:"global-build-store",level:3},{value:"Location &amp; Structure",id:"location--structure-1",level:4},{value:"Cache Key",id:"cache-key-1",level:4},{value:"Local Build Store",id:"local-build-store",level:3},{value:"Local Sandbox Cache",id:"local-sandbox-cache",level:3}],c={toc:p},d="wrapper";function u(e){let{components:t,...a}=e;return(0,l.kt)(d,(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"This document describes esy internals."),(0,l.kt)("h2",{id:"overview"},"Overview"),(0,l.kt)("p",null,"Almost every esy command operates in context of a ",(0,l.kt)("a",{parentName:"p",href:"/docs/concepts#sandbox"},"project\nsandbox")," which is defined by a sandbox\n",(0,l.kt)("a",{parentName:"p",href:"/docs/concepts#manifest"},"manifest")," (usually ",(0,l.kt)("inlineCode",{parentName:"p"},"package.json")," but ",(0,l.kt)("inlineCode",{parentName:"p"},"esy.json")," is also\nsupported)."),(0,l.kt)("h2",{id:"pipeline"},"Pipeline"),(0,l.kt)("p",null,"The typical pipeline from having a clean checkout of an esy project to the\npoint where all artifacts are built consists of the following steps:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Solve Dependencies")),(0,l.kt)("p",{parentName:"li"},"Produces ",(0,l.kt)("inlineCode",{parentName:"p"},"esy.lock")," solution lock out of ",(0,l.kt)("inlineCode",{parentName:"p"},"package.json"),".  This step is\noptional as ",(0,l.kt)("inlineCode",{parentName:"p"},"esy.lock")," can be already present in a fresh checkout.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Fetch Dependencies")),(0,l.kt)("p",{parentName:"li"},"Ensures all packages mentioned in ",(0,l.kt)("inlineCode",{parentName:"p"},"esy.lock")," is in the ",(0,l.kt)("a",{parentName:"p",href:"#global-installation-cache"},"Global\nInstallation Cache"),".")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Crawl Package Graph")),(0,l.kt)("p",{parentName:"li"},"Crawls the sandbox's lockfile and linked packages and read them into\n",(0,l.kt)("inlineCode",{parentName:"p"},"BuildManifest.t"),".")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Produce Task Graph")),(0,l.kt)("p",{parentName:"li"},"Folds over the ",(0,l.kt)("inlineCode",{parentName:"p"},"BuildManifest.t")," and produces the ",(0,l.kt)("inlineCode",{parentName:"p"},"Plan.Task.t")," structures.")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("p",{parentName:"li"},(0,l.kt)("strong",{parentName:"p"},"Build Task Graph")),(0,l.kt)("p",{parentName:"li"},"For each ",(0,l.kt)("inlineCode",{parentName:"p"},"Plan.Task.t")," exeute build commands in the corresponding environment\nusing ",(0,l.kt)("inlineCode",{parentName:"p"},"esy-build-package")," command."))),(0,l.kt)("h3",{id:"solve-dependencies"},"Solve Dependencies"),(0,l.kt)("p",null,"This step produces a ",(0,l.kt)("a",{parentName:"p",href:"/docs/concepts#solution"},"solution")," out of dependency\ndeclarations found in a project's root ",(0,l.kt)("a",{parentName:"p",href:"/docs/concepts#manifest"},"manifest")," and all\ntransitively dependent packages' manifests."),(0,l.kt)("p",null,"First, a package universe (a transitive closure of all dependencies' versions)\nis constructed by consulting package registries (npm and opam currently) and\nother sources (remote URLs, local paths and various git repositories hostings)."),(0,l.kt)("p",null,"The constructed package universe is then encoded as ",(0,l.kt)("a",{parentName:"p",href:"/docs/concepts#CUDF"},"CUDF")," and\nis fed to a CUDF solver (provided by the ",(0,l.kt)("inlineCode",{parentName:"p"},"esy-solve-cudf")," npm package\nwhich uses ",(0,l.kt)("a",{parentName:"p",href:"http://www.i3s.unice.fr/~cpjm/misc/mccs.html"},"mccs")," solver underneath)."),(0,l.kt)("p",null,"The result of the solver is then decoded and serialized on disk as ",(0,l.kt)("inlineCode",{parentName:"p"},"esy.lock"),".\nIt is advised to commit this file to version control as it captures the current\nstate of the project's dependencies. This allows us to reproduce the\nexact same environment anywhere."),(0,l.kt)("p",null,"Modules of interest:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"esyi/Universe")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"esyi/Resolver")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"esyi/Solver")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"esyi/Solution"))),(0,l.kt)("h3",{id:"fetch-dependencies"},"Fetch Dependencies"),(0,l.kt)("p",null,"This step consumes a ",(0,l.kt)("a",{parentName:"p",href:"/docs/concepts#solution"},"solution")," produced by the previous\n",(0,l.kt)("a",{parentName:"p",href:"#solve-dependencies"},"Solve Dependencies")," step and ensures that all packages\nmentioned in the solution are fetched and cached in the ",(0,l.kt)("a",{parentName:"p",href:"#global-installation-cache"},"Global Installation Cache"),"."),(0,l.kt)("p",null,"How it works:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Traverse the solution"),(0,l.kt)("li",{parentName:"ul"},"For each record of the solution:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Fetch source (either a tarball or a git repo or ...)"),(0,l.kt)("li",{parentName:"ul"},"Apply all needed patches"),(0,l.kt)("li",{parentName:"ul"},"Pack as a ",(0,l.kt)("inlineCode",{parentName:"li"},"*.tgz")," and store in a cache")))),(0,l.kt)("p",null,"Modules of interest:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"esyi/Fetch")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"esyi/Solution"))),(0,l.kt)("h3",{id:"crawl-package-graph"},"Crawl Package Graph"),(0,l.kt)("p",null,"This step crawls the sandbox's lockfile and linked packages and read them into\n",(0,l.kt)("inlineCode",{parentName:"p"},"BuildManifest.t"),"."),(0,l.kt)("p",null,"Node of this graph are package metadata. Edges are instances of dependency\nrelations between packages. The dependency relations are defined by the following\nfields in a package's manifest:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},'"dependencies"')),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},'"peerDependencies"')," - same as ",(0,l.kt)("inlineCode",{parentName:"li"},'"dependencies"')," from the point of view of ",(0,l.kt)("inlineCode",{parentName:"li"},"esy"),",\nwas used by the legacy implementation of ",(0,l.kt)("inlineCode",{parentName:"li"},"esy install")," command to defer\ninstalling dependencies to the root package."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},'"optDependencies"')," - this models optional dependencies (if they are installed\nthey are used, otherwise - ignored), an analogue to opam's ",(0,l.kt)("inlineCode",{parentName:"li"},"depopts")," which are\nbeing discouraged now.")),(0,l.kt)("p",null,"Modules of interest:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"esy/Plan")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"esy/BuildManifest"))),(0,l.kt)("h3",{id:"produce-task-graph"},"Produce Task Graph"),(0,l.kt)("p",null,"This step consumes ",(0,l.kt)("inlineCode",{parentName:"p"},"BuildManifest.t")," structures and produces ",(0,l.kt)("inlineCode",{parentName:"p"},"Plan.Task.t"),"\nstructures."),(0,l.kt)("p",null,"The resulted graph is topologically isomorphic to the original\n",(0,l.kt)("inlineCode",{parentName:"p"},"Solution.Package.t")," graph but contains much more information about the build\nprocess for each of the packages in a sandbox:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"A list of ready to execute commands"),(0,l.kt)("li",{parentName:"ul"},"An environment which is needed to execute build commands")),(0,l.kt)("p",null,"Modules of interest:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"esy/Plan"))),(0,l.kt)("h3",{id:"build-task-graph"},"Build Task Graph"),(0,l.kt)("p",null,"After ",(0,l.kt)("inlineCode",{parentName:"p"},"Task.t")," is constructed, it's time to build it."),(0,l.kt)("p",null,"Each ",(0,l.kt)("inlineCode",{parentName:"p"},"Task.t")," is serialized into a JSON format called ",(0,l.kt)("a",{parentName:"p",href:"/docs/concepts#build-plan"},"Build\nPlan")," which is then used to invoke the ",(0,l.kt)("inlineCode",{parentName:"p"},"esy-build-package"),"\nexecutable."),(0,l.kt)("p",null,"Modules of interest:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"esy/Build")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"esy/PackageBuilder")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"esy-build-package/Builder"))),(0,l.kt)("h2",{id:"caches"},"Caches"),(0,l.kt)("p",null,"There are multiple levels of caches used by esy."),(0,l.kt)("h3",{id:"global-installation-cache"},"Global Installation Cache"),(0,l.kt)("p",null,"This cache stores sources of concrete package versions. It can be cleaned with\nthe ",(0,l.kt)("inlineCode",{parentName:"p"},"esy cleanup")," command. See ",(0,l.kt)("inlineCode",{parentName:"p"},"esy cleanup --help")," for details. This was\npreviously known as ",(0,l.kt)("inlineCode",{parentName:"p"},"esy gc"),"."),(0,l.kt)("h4",{id:"location--structure"},"Location & Structure"),(0,l.kt)("p",null,"The default location for the cache is ",(0,l.kt)("inlineCode",{parentName:"p"},"~/.esy/esyi/tarballs")," and can be\nindirectly controlled by the ",(0,l.kt)("inlineCode",{parentName:"p"},"--cache-path")," option of ",(0,l.kt)("inlineCode",{parentName:"p"},"esyi")," executable."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"% tree ~/.esy/source/i\n\u251c\u2500\u2500 esy-installer__0.0.0.tgz\n\u2514\u2500\u2500 substs__0.0.1.tgz\n...\n")),(0,l.kt)("h4",{id:"cache-key"},"Cache Key"),(0,l.kt)("p",null,"The cache key used for the cache consists of:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Package name"),(0,l.kt)("li",{parentName:"ul"},"Package version"),(0,l.kt)("li",{parentName:"ul"},"Package source (needed if package was fetched not from a registry but a git\nrepository or other source)"),(0,l.kt)("li",{parentName:"ul"},"A hash of all contents of patches and additional files (if those are defined\nfor the package, currently used by the opam overrides infra).")),(0,l.kt)("h3",{id:"global-build-store"},"Global Build Store"),(0,l.kt)("p",null,"This cache stores built artifacts of esy packages and related metadata."),(0,l.kt)("h4",{id:"location--structure-1"},"Location & Structure"),(0,l.kt)("p",null,"The default location for the cache is ",(0,l.kt)("inlineCode",{parentName:"p"},"~/.esy/3<prefix>")," and can be\nindirectly controlled by the ",(0,l.kt)("inlineCode",{parentName:"p"},"--store-path")," option of ",(0,l.kt)("inlineCode",{parentName:"p"},"esy")," executable."),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"<prefix>")," part of the path consists of a number of underscore characters\n",(0,l.kt)("inlineCode",{parentName:"p"},"_")," which pads the store path so that the length of the path to the ",(0,l.kt)("inlineCode",{parentName:"p"},"ocamlrun"),"\nexecutable in the store is exactly 128 characters."),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"The number 128 comes from the fact that on some systems a path mentioned in a\nshebang line (first line of executable which starts with ",(0,l.kt)("inlineCode",{parentName:"p"},"#!"),") is limited to\n128 characters. Thus the current limit ensure that OCaml bytecode executables\ncan be run from the store.\nNote, however, that global build store doesn't need the underscores. With large source trees,\nartifacts get created at very deep paths, and this can cause failures on Windows.\nThis is why we eventually shortened build paths to just ",(0,l.kt)("inlineCode",{parentName:"p"},"~/.esy/3/b")," in ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/esy/esy/pull/969"},"PR#969"))),(0,l.kt)("p",null,"The padding is needed to allow relocating built artifacts between stores."),(0,l.kt)("p",null,"The cache looks like:"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-bash"},"% tree ~/.esy/3_*\n\u251c\u2500\u2500 b\n\u2502\xa0\xa0 \u251c\u2500\u2500 ocaml-4.6.1-4f6b0960\n\u2502\xa0\xa0 \u251c\u2500\u2500 ocaml-4.6.1-4f6b0960.info\n\u2502\xa0\xa0 \u251c\u2500\u2500 ocaml-4.6.1-4f6b0960.log\n\u2502\xa0\xa0 ...\n\u251c\u2500\u2500 i\n\u2502\xa0\xa0 \u251c\u2500\u2500 ocaml-4.6.1-4f6b0960\n\u2502\xa0\xa0 ...\n\u2514\u2500\u2500 s\n")),(0,l.kt)("p",null,"Where"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"b/<key>")," is a directory which is used as a build root for a corresponding\npackage."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"b/<key>.log")," is log file for the build process of a package which corresponds\nto the ",(0,l.kt)("inlineCode",{parentName:"li"},"<key>"),"."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"b/<key>.info")," contains information about the corresponding build process such\ntimer ellapsed and so on."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"s/<key>")," is a stage directory for built artifact installation (packages\ninstall their own artifacts there and then esy moves ",(0,l.kt)("inlineCode",{parentName:"li"},"s/<key>")," to ",(0,l.kt)("inlineCode",{parentName:"li"},"i/<key>")," so\nthat the changes to the store are executed atomically."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"i/<key>")," is an installation directory, this is the directory which hosts\nbuilt artifacts of the package which corresponds to the ",(0,l.kt)("inlineCode",{parentName:"li"},"<key>"),".")),(0,l.kt)("h4",{id:"cache-key-1"},"Cache Key"),(0,l.kt)("p",null,"The cache key used for the cache consists of:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Package name"),(0,l.kt)("li",{parentName:"ul"},"Package version"),(0,l.kt)("li",{parentName:"ul"},"Hash of all build/install commands and other esy specific metadata from a\npackage manifest"),(0,l.kt)("li",{parentName:"ul"},"Hash of all dependencies' cache keys")),(0,l.kt)("h3",{id:"local-build-store"},"Local Build Store"),(0,l.kt)("p",null,"Local Build Store follows exactly the same layout and cache key as the Global\nBuild Store but it is local to a sandbox and located at\n",(0,l.kt)("inlineCode",{parentName:"p"},"<sandboxPath>/_esy/default/store"),"."),(0,l.kt)("p",null,"It is used to store artifacts of packages which don't have a stable build\nidentity (unreleased software which changes often and doesn't warrant sorting\nits artifacts in a Global Build Store)."),(0,l.kt)("h3",{id:"local-sandbox-cache"},"Local Sandbox Cache"),(0,l.kt)("p",null,"Local Sandbox Cache stores a computed package and build task graph. It is\nlocated at ",(0,l.kt)("inlineCode",{parentName:"p"},"<sandboxPath>/_esy/default/cache/sandbox-<hash>"),", where ",(0,l.kt)("inlineCode",{parentName:"p"},"<hash>"),"\nis a hash of:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Store Path"),(0,l.kt)("li",{parentName:"ul"},"Sandbox Path"),(0,l.kt)("li",{parentName:"ul"},"Local Store Path"),(0,l.kt)("li",{parentName:"ul"},"Version of esy")),(0,l.kt)("p",null,"The cache is stored in a format readable by the OCaml ",(0,l.kt)("a",{parentName:"p",href:"https://caml.inria.fr/pub/docs/manual-ocaml/libref/Marshal.html"},"Marshal")," module."),(0,l.kt)("blockquote",null,(0,l.kt)("p",{parentName:"blockquote"},"Reading the cache file with a version of esy which has different\n",(0,l.kt)("inlineCode",{parentName:"p"},"SandboxInfo.t")," layout than the one with which the cache was produced with\nusually results in a Segmentation Fault.")))}u.isMDXComponent=!0}}]);