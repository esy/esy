"use strict";(self.webpackChunksite_v_3=self.webpackChunksite_v_3||[]).push([[8382],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>h});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=s(n),c=i,h=d["".concat(p,".").concat(c)]||d[c]||m[c]||a;return n?r.createElement(h,o(o({ref:t},u),{},{components:n})):r.createElement(h,o({ref:t},u))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=c;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[d]="string"==typeof e?e:i,o[1]=l;for(var s=2;s<a;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},2770:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>o,default:()=>m,frontMatter:()=>a,metadata:()=>l,toc:()=>s});var r=n(7462),i=(n(7294),n(3905));const a={id:"contributing",title:"Contributing"},o=void 0,l={unversionedId:"contributing",id:"contributing",title:"Contributing",description:"Editor Integration For New Editor:",source:"@site/../docs/contributing.md",sourceDirName:".",slug:"/contributing",permalink:"/docs/contributing",draft:!1,editUrl:"https://github.com/esy/esy/tree/master/docs/../docs/contributing.md",tags:[],version:"current",lastUpdatedBy:"Manas",lastUpdatedAt:1693535474,formattedLastUpdatedAt:"Sep 1, 2023",frontMatter:{id:"contributing",title:"Contributing"}},p={},s=[{value:"Editor Integration For New Editor:",id:"editor-integration-for-new-editor",level:2},{value:"Helping Out With Editor Integration",id:"helping-out-with-editor-integration",level:3}],u={toc:s},d="wrapper";function m(e){let{components:t,...n}=e;return(0,i.kt)(d,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"editor-integration-for-new-editor"},"Editor Integration For New Editor:"),(0,i.kt)("p",null,"Currently supported editor integrations:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"LSP"),(0,i.kt)("th",{parentName:"tr",align:null},"Vim"),(0,i.kt)("th",{parentName:"tr",align:null},"Emacs"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"https://github.com/freebroccolo/ocaml-language-server"},"DONE")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"https://github.com/jordwalke/vim-reason"},"DONE")),(0,i.kt)("td",{parentName:"tr",align:null},"HELP APPRECIATED")))),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Note: The Vim plugin does not yet have support for ",(0,i.kt)("inlineCode",{parentName:"li"},".ml")," file extensions and\ncurrently only activates upon ",(0,i.kt)("inlineCode",{parentName:"li"},".re"),"."),(0,i.kt)("li",{parentName:"ul"},"Note: For VSCode, editing multiple projects simultaneously requires a separate\nwindow per project.")),(0,i.kt)("p",null,"When you edit an ",(0,i.kt)("inlineCode",{parentName:"p"},"esy")," project in editors with supported integration,\nthe dev environment will be correctly constructed so that\nall your dependencies are seen by the editor, while maintaining isolation\nbetween multiple projects."),(0,i.kt)("p",null,'That means your autocomplete "Just Works" according to what is listed in your\n',(0,i.kt)("inlineCode",{parentName:"p"},"esy.json"),"/",(0,i.kt)("inlineCode",{parentName:"p"},"package.json"),", and you can edit multiple projects simultaneously\neven when each of these projects have very different versions of dependencies\n(including compiler versions)."),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/esy-ocaml/hello-reason"},"hello-reason")," is an example project\nthat uses ",(0,i.kt)("inlineCode",{parentName:"p"},"esy")," to manage dependencies and works well with either of those\neditor plugins mentioned. Simply clone that project, ",(0,i.kt)("inlineCode",{parentName:"p"},"esy"),", and then open a ",(0,i.kt)("inlineCode",{parentName:"p"},".re")," file in any of the supported editors/plugins\nmentioned."),(0,i.kt)("h3",{id:"helping-out-with-editor-integration"},"Helping Out With Editor Integration"),(0,i.kt)("p",null,"Help with the Emacs plugin is appreciated, and if contributing supobprt it is encouraged\nthat you model the plugin implementation after the ",(0,i.kt)("inlineCode",{parentName:"p"},"vim-reason")," plugin.\nAt a high level here is what editor support should do:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"For each buffer/file opened, determine which ",(0,i.kt)("inlineCode",{parentName:"li"},"esy")," project it belongs to, if any."),(0,i.kt)("li",{parentName:"ul"},'For each project, determine the "phase".',(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"The phase is either, ",(0,i.kt)("inlineCode",{parentName:"li"},"'no-esy-field'"),", ",(0,i.kt)("inlineCode",{parentName:"li"},"'uninitialized', "),"'installed'",(0,i.kt)("inlineCode",{parentName:"li"},", or "),"'built'`."))),(0,i.kt)("li",{parentName:"ul"},"Provide some commands such as"),(0,i.kt)("li",{parentName:"ul"},"Implement some commands such as:",(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"EsyFetchProjectInfo"),": Show the project's ",(0,i.kt)("inlineCode",{parentName:"li"},"package.json"),', and the "stage" of\nthe project. '),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Reset"),": Reset any caches, and internal knowledge of buffers/projects."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"EsyExec"),": Execute a command in the current buffer's project environment."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"EsyBuilds"),": Run the ",(0,i.kt)("inlineCode",{parentName:"li"},"esy ls-builds")," command."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"EsyLibs"),": Run the ",(0,i.kt)("inlineCode",{parentName:"li"},"esy ls-libs")," command."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"EsyModules"),": Run the ",(0,i.kt)("inlineCode",{parentName:"li"},"esy ls-modules")," command."))),(0,i.kt)("li",{parentName:"ul"},"As soon as the phase is finally in the ",(0,i.kt)("inlineCode",{parentName:"li"},"built")," state, initialize a merlin process\nupon the first ",(0,i.kt)("inlineCode",{parentName:"li"},".re"),"/",(0,i.kt)("inlineCode",{parentName:"li"},".ml")," file opened. That should use the ",(0,i.kt)("inlineCode",{parentName:"li"},"EsyExec")," functionality\nto ensure the process is being started within the correct environment per project.")),(0,i.kt)("p",null,"See the implementation of ",(0,i.kt)("inlineCode",{parentName:"p"},"vim-reason")," ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/jordwalke/vim-reason/blob/master/autoload/esy.vim"},"here")))}m.isMDXComponent=!0}}]);